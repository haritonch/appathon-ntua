{"version":3,"sources":["MainArtwork/MainArtwork.js","Explore/ThumbnailImage.js","Explore/MoreByArtist/MoreByArtist.js","Explore/MoreInDepartment/MoreInDepartment.js","Explore/YouMightAlsoLike/YouMightAlsoLike.js","Explore/Explore.js","App.js","serviceWorker.js","index.js"],"names":["MainArtwork","props","className","href","object","objectURL","target","rel","src","primaryImageSmall","alt","title","objectDate","country","artistDisplayName","ThumbnailImage","url","onClick","selectImage","MoreByArtist","moreObjectsByArtist","thumbnailImages","map","obj","key","objectID","artistName","MoreInDepartment","moreObjectsInDepartment","departmentName","YouMightAlsoLike","moreObjectsYouMightLike","Explore","this","mainObject","department","React","Component","App","getMainObject","a","fetch","response","json","setState","getMoreByArtist","state","responseJSON","objectIDs","selection","sort","Math","random","slice","concat","getMoreInDepartment","deptID","deptIdOf","getYouMightLike","i","floor","length","createDeptIdOf","departments","dept","displayName","departmentId","then","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.298b7d49.chunk.js","sourcesContent":["import React from 'react';\n\nconst MainArtwork = (props) => (\n  <div className=\"main-artwork\">\n    <a href={props.object.objectURL} target=\"_blank\" rel=\"noopener noreferrer\">\n      <img className=\"primary-image\" src={props.object.primaryImageSmall} alt={props.object.title}/>\n    </a>\n    <div className=\"main-info\">\n      <h2 className=\"title\">{props.object.title}</h2>\n      <h4 className=\"date\">{props.object.objectDate} {props.object.country ? \",\" + props.object.country : \"\"}</h4>\n      <h3 className=\"artist\">{props.object.artistDisplayName}</h3>\n    </div>\n  </div>\n);\n\nexport default MainArtwork;\n","import React from 'react';\n\nconst ThumbnailImage = (props) => (\n  <img className=\"thumbnail-image\" src={props.url} alt={props.object.title}\n       onClick={() => {props.selectImage(props.object);}}/>\n);\n\nexport default ThumbnailImage;\n","import React from 'react';\nimport ThumbnailImage from '../ThumbnailImage';\n\nconst MoreByArtist = (props) => {\n  if (props.moreObjectsByArtist) {\n    const thumbnailImages = props.moreObjectsByArtist.map( (obj) => (\n        <ThumbnailImage\n          url={obj.primaryImageSmall}\n          object={obj}\n          selectImage={props.selectImage}\n          key={obj.objectID}\n        />\n      )\n    );\n    return (\n      <div className=\"more by-artist more\">\n        <p>More by {props.artistName}</p>\n        <div className=\"thumbnail\">\n          { thumbnailImages }\n        </div>\n      </div>\n    );\n  }\n  else {\n    return <div></div>\n  }\n}\n\nexport default MoreByArtist;\n","import React from 'react';\nimport ThumbnailImage from '../ThumbnailImage';\n\nconst MoreInDepartment = (props) => {\n  if (props.moreObjectsInDepartment) {\n    let thumbnailImages = props.moreObjectsInDepartment.map((obj) => (\n        <ThumbnailImage\n          url={obj.primaryImageSmall}\n          object={obj}\n          selectImage={props.selectImage}\n          key={obj.objectID}\n        />\n      )\n    );\n    return (\n      <div className=\"more in-department\">\n        <p>More in department: {props.departmentName}</p>\n        <div className=\"thumbnail\">\n          { thumbnailImages }\n        </div>\n      </div>\n    );\n  }\n  else {\n    return <div></div>\n  }\n}\n\nexport default MoreInDepartment;\n","import React from 'react';\nimport ThumbnailImage from '../ThumbnailImage';\n\nconst YouMightAlsoLike = (props) => {\n  if (props.moreObjectsYouMightLike) {\n    let thumbnailImages = props.moreObjectsYouMightLike.map((obj) => (\n        <ThumbnailImage\n          url={obj.primaryImageSmall}\n          object={obj}\n          selectImage={props.selectImage}\n          key={obj.objectID}\n        />\n      )\n    );\n    return (\n      <div className=\"more you-might-also-like\">\n        <p>You might also like</p>\n        <div className=\"thumbnail\">\n          { thumbnailImages }\n        </div>\n      </div>\n    );\n  }\n  else {\n    return <div></div>\n  }\n}\n\nexport default YouMightAlsoLike;\n","import React from 'react';\nimport { MoreByArtist } from './MoreByArtist';\nimport { MoreInDepartment } from './MoreInDepartment';\nimport { YouMightAlsoLike } from './YouMightAlsoLike';\n\nclass Explore extends React.Component {\n  render() {\n    return (\n        this.props.mainObject.artistDisplayName && this.props.mainObject.department ?\n        <div>\n          <MoreByArtist\n            artistName={this.props.mainObject.artistDisplayName}\n            moreObjectsByArtist={this.props.moreObjectsByArtist}\n            selectImage={this.props.selectImage}\n          />\n          <MoreInDepartment\n            departmentName={this.props.mainObject.department}\n            moreObjectsInDepartment={this.props.moreObjectsInDepartment}\n            selectImage={this.props.selectImage}\n          />\n          <YouMightAlsoLike\n            moreObjectsYouMightLike={this.props.moreObjectsYouMightLike}\n            selectImage={this.props.selectImage}\n          />\n\n        </div> : <div></div>\n    );\n  }\n}\n\nexport default Explore;\n","import React from 'react';\nimport './App.css';\nimport { MainArtwork } from './MainArtwork';\nimport { Explore } from './Explore';\n\nclass App extends React.Component {\n  constructor() {\n    super();\n    this.deptIdOf = {};\n    this.state = {\n      mainObject: null,\n      moreObjectsByArtist: null,\n      moreObjectsInDepartment: null,\n      moreObjectsYouMightLike: null,\n    };\n  }\n\n  getMainObject = async (objectID) => {\n    let response = await fetch(`https://collectionapi.metmuseum.org/public/collection/v1/objects/${objectID}`);\n    let mainObject = await response.json();\n    this.setState({\n      mainObject,\n    });\n  }\n\n  getMoreByArtist = async () => {\n    this.setState({\n      moreObjectsByArtist: [],\n    });\n    const response = await fetch(`https://collectionapi.metmuseum.org/public/collection/v1/search?hasImages=true&artistOrCulture=true&q=${this.state.mainObject.artistDisplayName}`);\n    const responseJSON = await response.json();\n    const objectIDs = await responseJSON.objectIDs;\n    const selection = objectIDs.sort(() => .5 - Math.random()).slice(0, 6);\n    for (let objectID of selection) {\n      const response = await fetch(`https://collectionapi.metmuseum.org/public/collection/v1/objects/${objectID}`);\n      const object = await response.json();\n      if (object.artistDisplayName === this.state.mainObject.artistDisplayName) {\n        this.setState({\n          moreObjectsByArtist: this.state.moreObjectsByArtist.concat([object]),\n        });\n      }\n    }\n  }\n\n  getMoreInDepartment = async () => {\n    this.setState({\n      moreObjectsInDepartment: [],\n    });\n    const deptID = this.deptIdOf[this.state.mainObject.department];\n    const response = await fetch(`https://collectionapi.metmuseum.org/public/collection/v1/search?departmentId=${deptID}&hasImages=true&q=%22%22`);\n    const responseJSON = await response.json();\n    const objectIDs = await responseJSON.objectIDs;\n    const selection = objectIDs.sort(() => .5 - Math.random()).slice(0, 6);\n    for (let objectID of selection) {\n      const response = await fetch(`https://collectionapi.metmuseum.org/public/collection/v1/objects/${objectID}`);\n      const object = await response.json();\n      this.setState({\n        moreObjectsInDepartment: this.state.moreObjectsInDepartment.concat([object]),\n      });\n    }\n  }\n\n  getYouMightLike = async () => {\n    this.setState({\n      moreObjectsYouMightLike: [],\n    });\n    const response = await fetch(`https://collectionapi.metmuseum.org/public/collection/v1/search?hasImages=true&q=\"\"`);\n    const responseJSON = await response.json();\n    const objectIDs = responseJSON.objectIDs;\n    let i = 6;\n    while (i > 0) {\n      const objectID = objectIDs[Math.floor(Math.random() * objectIDs.length)];\n      const response = await fetch(`https://collectionapi.metmuseum.org/public/collection/v1/objects/${objectID}`);\n      const object = await response.json();\n      if (object.artistDisplayName !== \"\") {\n        i--;\n        this.setState({\n          moreObjectsYouMightLike: this.state.moreObjectsYouMightLike.concat([object]),\n        });\n      }\n    }\n  }\n\n  createDeptIdOf = async () => {\n    const response = await fetch('https://collectionapi.metmuseum.org/public/collection/v1/departments');\n    const responseJSON = await response.json();\n    for (let dept of responseJSON.departments) {\n      this.deptIdOf[dept.displayName] = dept.departmentId;\n    }\n  }\n\n  componentDidMount() {\n    this.getMainObject(436532)\n    .then(() => {\n      this.getMoreByArtist();\n      this.createDeptIdOf()\n      .then(() => {\n        this.getMoreInDepartment();\n      });\n      this.getYouMightLike();\n    });\n  }\n\n  selectImage = async (object) => {\n    await this.setState({\n      mainObject: object,\n    });\n    this.getMoreByArtist();\n    this.getMoreInDepartment();\n    this.getYouMightLike();\n\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <div className=\"container-fluid\">\n          <div className=\"row\">\n            <div className=\"col left-half\">\n              {\n                this.state.mainObject ?\n                <MainArtwork\n                  object={this.state.mainObject}\n                /> : <div></div>\n              }\n            </div>\n            <div className=\"col right-half\">\n              {this.state.mainObject ?\n                <Explore\n                  mainObject={this.state.mainObject}\n                  moreObjectsByArtist={this.state.moreObjectsByArtist}\n                  moreObjectsInDepartment={this.state.moreObjectsInDepartment}\n                  moreObjectsYouMightLike={this.state.moreObjectsYouMightLike}\n                  selectImage={this.selectImage}\n                /> : <div></div>\n              }\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}